server {

    listen      80;
    listen [::]:80;
    server_name  localhost;
    default_type 'text/plain; charset=utf-8';

    location / {
        access_by_lua_block {
            -- transform payload cookie to request header 
            local token = ngx.req.get_headers()["Token"] 
            ngx.req.set_header("Authorization", "Bearer " .. token)
            ngx.req.clear_header("Token")
            local jwt = require("nginx-jwt")
            jwt.auth({
            })
        }
        include /etc/nginx/proxy_params; 
        if ($request_method = 'OPTIONS') {
            # see https://enable-cors.org/server_nginx.html
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS'; 
            add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization';
            add_header 'Access-Control-Expose-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'X-Frame-Options' 'ALLOW-FROM http://localhost:5000';
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization';
            add_header 'Access-Control-Expose-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'X-Frame-Options' 'ALLOW-FROM http://localhost:5000';
        }
        proxy_pass  http://app:8000/;
    }

    location /auth {
        access_by_lua_block {
            -- transform payload query param to cookie
            if ngx.var.arg_token == nil then
                ngx.log(ngx.ERR, 'No token provided in query string.')
                ngx.exit()
            end
            local token = ngx.var.arg_token
            ngx.header["Token"] = token
            ngx.header["Access-Control-Allow-Origin"] = "*"
            ngx.redirect("/", 301)
        }
    }

    error_page 401 /401.html;
    location = /401.html {
        root /usr/local/openresty/nginx/html;
        internal;
    }
    error_page 500 /500.html;
    location = /500.html {
        root /usr/local/openresty/nginx/html;
        internal;
    }

}

